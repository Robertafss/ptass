andom.Generator(np.random.PCG64(seed))\n        >>> gen.multivariate_hypergeometric(colors, 6)\n        array([5, 0, 1])\n        >>> gen.multivariate_hypergeometric(colors, 6, size=3)\n        array([[5, 0, 1],\n               [2, 2, 2],\n               [3, 3, 0]])\n        >>> gen.multivariate_hypergeometric(colors, 6, size=(2, 2))\n        array([[[3, 2, 1],\n                [3, 2, 1]],\n               [[4, 1, 1],\n                [3, 2, 1]]])\n        '
        ...
    
    def multivariate_normal(self, mean, cov, size=..., check_valid=..., tol=..., *, method=...) -> typing.Any:
        '\n        multivariate_normal(mean, cov, size=None, check_valid=\'warn\',\n                            tol=1e-8, *, method=\'svd\')\n\n        Draw random samples from a multivariate normal distribution.\n\n        The multivariate normal, multinormal or Gaussian distribution is a\n        generalization of the one-dimensional normal distribution to higher\n        dimensions.  Such a distribution is specified by its mean and\n        covariance matrix.  These parameters are analogous to the mean\n        (average or "center") and variance (standard deviation, or "width,"\n        squared) of the one-dimensional normal distribution.\n\n        Parameters\n        ----------\n        mean : 1-D array_like, of length N\n            Mean of the N-dimensional distribution.\n        cov : 2-D array_like, of shape (N, N)\n            Covariance matrix of the distribution. It must be symmetric and\n            positive-semidefinite for proper sampling.\n        size : int or tuple of ints, optional\n            Given a shape of, for example, ``(m,n,k)``, ``m*n*k`` samples are\n            generated, and packed in an `m`-by-`n`-by-`k` arrangement.  Because\n            each sample is `N`-dimensional, the output shape is ``(m,n,k,N)``.\n            If no shape is specified, a single (`N`-D) sample is returned.\n        check_valid : { \'warn\', \'raise\', \'ignore\' }, optional\n            Behavior when the covariance matrix is not positive semidefinite.\n        tol : float, optional\n            Tolerance when checking the singular values in covariance matrix.\n            cov is cast to double before the check.\n        method : { \'svd\', \'eigh\', \'cholesky\'}, optional\n            The cov input is used to compute a factor matrix A such that\n            ``A @ A.T = cov``. This argument is used to select the method\n            used to compute the factor matrix A. The default method \'svd\' is\n            